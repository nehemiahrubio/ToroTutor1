{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jackie\\\\OneDrive\\\\\\u6587\\u6863\\\\GitHub\\\\TutorUP-App\\\\client\\\\src\\\\components\\\\common\\\\AdminRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n// Route protected by auth, redirect when user logs out or when auth is invalid\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = _ref => {\n  let {\n    component: Component,\n    auth,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => auth.user.isAdmin === true && auth.isAuthenticated === true ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n_c = AdminRoute;\nAdminRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(AdminRoute);\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Route","Redirect","connect","PropTypes","jsxDEV","_jsxDEV","AdminRoute","_ref","component","Component","auth","rest","render","props","user","isAdmin","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","propTypes","object","isRequired","mapStateToProps","state","$RefreshReg$"],"sources":["C:/Users/jackie/OneDrive/文档/GitHub/TutorUP-App/client/src/components/common/AdminRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Route protected by auth, redirect when user logs out or when auth is invalid\r\nconst AdminRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.user.isAdmin === true && auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nAdminRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AdminRoute);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGC,IAAA;EAAA,IAAC;IAAEC,SAAS,EAAEC,SAAS;IAAEC,IAAI;IAAE,GAAGC;EAAK,CAAC,GAAAJ,IAAA;EAAA,oBACzDF,OAAA,CAACL,KAAK;IAAA,GACAW,IAAI;IACRC,MAAM,EAAGC,KAAK,IACZH,IAAI,CAACI,IAAI,CAACC,OAAO,KAAK,IAAI,IAAIL,IAAI,CAACM,eAAe,KAAK,IAAI,gBACzDX,OAAA,CAACI,SAAS;MAAA,GAAKI;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAExBf,OAAA,CAACJ,QAAQ;MAACoB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAE1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAAA,CACH;AAACE,EAAA,GAXIhB,UAAU;AAahBA,UAAU,CAACiB,SAAS,GAAG;EACrBb,IAAI,EAAEP,SAAS,CAACqB,MAAM,CAACC;AACzB,CAAC;AAED,MAAMC,eAAe,GAAIC,KAAK,KAAM;EAClCjB,IAAI,EAAEiB,KAAK,CAACjB;AACd,CAAC,CAAC;AAEF,eAAeR,OAAO,CAACwB,eAAe,CAAC,CAACpB,UAAU,CAAC;AAAC,IAAAgB,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}