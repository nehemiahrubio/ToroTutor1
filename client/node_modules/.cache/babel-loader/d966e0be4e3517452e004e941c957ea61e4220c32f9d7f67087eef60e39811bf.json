{"ast":null,"code":"import axios from\"axios\";import{GET_SUBJECTS,SUBJECTS_LOADING,GET_ERRORS}from\"./types\";export const createSubjects=(subjectData,history)=>dispatch=>{console.log('Creating subjects:',subjectData);return axios.post(\"/api/subjects\",subjectData).then(res=>{console.log('Subjects created successfully:',res.data);history.push(\"/subjects\");}).catch(err=>{console.error('Error creating subjects:',err);dispatch({type:GET_ERRORS,payload:err.response.data});});};// Get all subjects\nexport const getSubjects=()=>dispatch=>{dispatch(setSubjectsLoading());axios.get(\"/api/subjects\").then(res=>{dispatch({type:GET_SUBJECTS,payload:res.data});}).catch(err=>{dispatch({type:GET_ERRORS,payload:null});});};// Delete a subject by ID\nexport const removeSubject=(subjectId,history)=>dispatch=>{return new Promise((resolve,reject)=>{axios.delete(\"/api/subjects\",{data:{id:subjectId}}).then(res=>{// Dispatch an action to update the state after successful deletion\ndispatch({type:GET_SUBJECTS,payload:res.data// Assuming the response contains the updated subjects\n});// Optionally, you can dispatch other actions or perform additional logic here\nresolve(res.data);// Resolve the promise with the response data\n}).catch(err=>{console.log(err);reject(err);// Reject the promise with the error\n});});};// Subjects loading\nexport const setSubjectsLoading=()=>{return{type:SUBJECTS_LOADING};};","map":{"version":3,"names":["axios","GET_SUBJECTS","SUBJECTS_LOADING","GET_ERRORS","createSubjects","subjectData","history","dispatch","console","log","post","then","res","data","push","catch","err","error","type","payload","response","getSubjects","setSubjectsLoading","get","removeSubject","subjectId","Promise","resolve","reject","delete","id"],"sources":["C:/Users/jackie/OneDrive/文档/GitHub/TutorUP-App/client/src/redux/actions/subjectActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { GET_SUBJECTS, SUBJECTS_LOADING, GET_ERRORS } from \"./types\";\r\n\r\nexport const createSubjects = (subjectData, history) => (dispatch) => {\r\n  console.log('Creating subjects:', subjectData);\r\n\r\n  return axios\r\n    .post(\"/api/subjects\", subjectData)\r\n    .then((res) => {\r\n      console.log('Subjects created successfully:', res.data);\r\n      history.push(\"/subjects\");\r\n    })\r\n    .catch((err) => {\r\n      console.error('Error creating subjects:', err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    });\r\n};\r\n\r\n\r\n// Get all subjects\r\nexport const getSubjects = () => (dispatch) => {\r\n  dispatch(setSubjectsLoading());\r\n  axios\r\n    .get(\"/api/subjects\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_SUBJECTS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: null,\r\n      });\r\n    });\r\n};\r\n\r\n// Delete a subject by ID\r\nexport const removeSubject = (subjectId, history) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .delete(\"/api/subjects\", { data: { id: subjectId } })\r\n      .then((res) => {\r\n        // Dispatch an action to update the state after successful deletion\r\n        dispatch({\r\n          type: GET_SUBJECTS,\r\n          payload: res.data, // Assuming the response contains the updated subjects\r\n        });\r\n        // Optionally, you can dispatch other actions or perform additional logic here\r\n        resolve(res.data); // Resolve the promise with the response data\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        reject(err); // Reject the promise with the error\r\n      });\r\n  });\r\n};\r\n\r\n\r\n// Subjects loading\r\nexport const setSubjectsLoading = () => {\r\n  return {\r\n    type: SUBJECTS_LOADING,\r\n  };\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,YAAY,CAAEC,gBAAgB,CAAEC,UAAU,KAAQ,SAAS,CAEpE,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAACC,WAAW,CAAEC,OAAO,GAAMC,QAAQ,EAAK,CACpEC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEJ,WAAW,CAAC,CAE9C,MAAO,CAAAL,KAAK,CACTU,IAAI,CAAC,eAAe,CAAEL,WAAW,CAAC,CAClCM,IAAI,CAAEC,GAAG,EAAK,CACbJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEG,GAAG,CAACC,IAAI,CAAC,CACvDP,OAAO,CAACQ,IAAI,CAAC,WAAW,CAAC,CAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,EAAK,CACdR,OAAO,CAACS,KAAK,CAAC,0BAA0B,CAAED,GAAG,CAAC,CAC9CT,QAAQ,CAAC,CACPW,IAAI,CAAEf,UAAU,CAChBgB,OAAO,CAAEH,GAAG,CAACI,QAAQ,CAACP,IACxB,CAAC,CAAC,CACJ,CAAC,CAAC,CACN,CAAC,CAGD;AACA,MAAO,MAAM,CAAAQ,WAAW,CAAGA,CAAA,GAAOd,QAAQ,EAAK,CAC7CA,QAAQ,CAACe,kBAAkB,CAAC,CAAC,CAAC,CAC9BtB,KAAK,CACFuB,GAAG,CAAC,eAAe,CAAC,CACpBZ,IAAI,CAAEC,GAAG,EAAK,CACbL,QAAQ,CAAC,CACPW,IAAI,CAAEjB,YAAY,CAClBkB,OAAO,CAAEP,GAAG,CAACC,IACf,CAAC,CAAC,CACJ,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,EAAK,CACdT,QAAQ,CAAC,CACPW,IAAI,CAAEf,UAAU,CAChBgB,OAAO,CAAE,IACX,CAAC,CAAC,CACJ,CAAC,CAAC,CACN,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,aAAa,CAAGA,CAACC,SAAS,CAAEnB,OAAO,GAAMC,QAAQ,EAAK,CACjE,MAAO,IAAI,CAAAmB,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtC5B,KAAK,CACF6B,MAAM,CAAC,eAAe,CAAE,CAAEhB,IAAI,CAAE,CAAEiB,EAAE,CAAEL,SAAU,CAAE,CAAC,CAAC,CACpDd,IAAI,CAAEC,GAAG,EAAK,CACb;AACAL,QAAQ,CAAC,CACPW,IAAI,CAAEjB,YAAY,CAClBkB,OAAO,CAAEP,GAAG,CAACC,IAAM;AACrB,CAAC,CAAC,CACF;AACAc,OAAO,CAACf,GAAG,CAACC,IAAI,CAAC,CAAE;AACrB,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,EAAK,CACdR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC,CAChBY,MAAM,CAACZ,GAAG,CAAC,CAAE;AACf,CAAC,CAAC,CACN,CAAC,CAAC,CACJ,CAAC,CAGD;AACA,MAAO,MAAM,CAAAM,kBAAkB,CAAGA,CAAA,GAAM,CACtC,MAAO,CACLJ,IAAI,CAAEhB,gBACR,CAAC,CACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}