{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, CLEAR_ERRORS, SET_CURRENT_USER } from \"./types\";\n\n// Register User\nexport const registerUser = userData => dispatch => {\n  axios.post(\"/api/users/register\", userData).then(res => {\n    if (res.status === 200) {\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n    }\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\n\n// Login - Get User JWT\nexport const loginUser = userData => dispatch => {\n  axios.post(\"/api/users/login\", userData).then(res => {\n    // save to localStorage\n    const {\n      token\n    } = res.data;\n    // set token to localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set token to auth header\n    setAuthToken(token);\n    // decode token to get user data\n    const decoded = jwt_decode(token);\n    // set current user\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\n\n// Set logged in user\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Set admin property\nexport const setAdmin = adminProps => dispatch => {\n  axios.post(\"/api/users/admin\", {\n    adminProps: adminProps\n  }).catch(err => console.log(err));\n};\n\n// Log out user\nexport const logoutUser = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem(\"jwtToken\");\n  // Set auth header for future requests\n  setAuthToken(false);\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","CLEAR_ERRORS","SET_CURRENT_USER","registerUser","userData","dispatch","post","then","res","status","type","catch","err","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","clearErrors","setAdmin","adminProps","console","log","logoutUser","removeItem"],"sources":["C:/Users/jackie/OneDrive/文档/GitHub/TutorUP-App/client/src/redux/actions/authActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { GET_ERRORS, CLEAR_ERRORS, SET_CURRENT_USER } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then((res) => {\r\n      if (res.status === 200) {\r\n        dispatch({\r\n          type: CLEAR_ERRORS,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Login - Get User JWT\r\nexport const loginUser = (userData) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then((res) => {\r\n      // save to localStorage\r\n      const { token } = res.data;\r\n      // set token to localStorage\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // set token to auth header\r\n      setAuthToken(token);\r\n      // decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS,\r\n  };\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = (decoded) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded,\r\n  };\r\n};\r\n\r\n// Set admin property\r\nexport const setAdmin = (adminProps) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/users/admin\", { adminProps: adminProps })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n// Log out user\r\nexport const logoutUser = () => (dispatch) => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Set auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,UAAU,EAAEC,YAAY,EAAEC,gBAAgB,QAAQ,SAAS;;AAEpE;AACA,OAAO,MAAMC,YAAY,GAAIC,QAAQ,IAAMC,QAAQ,IAAK;EACtDR,KAAK,CACFS,IAAI,CAAC,qBAAqB,EAAEF,QAAQ,CAAC,CACrCG,IAAI,CAAEC,GAAG,IAAK;IACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;MACtBJ,QAAQ,CAAC;QACPK,IAAI,EAAET;MACR,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,CACDU,KAAK,CAAEC,GAAG,IACTP,QAAQ,CAAC;IACPK,IAAI,EAAEV,UAAU;IAChBa,OAAO,EAAED,GAAG,CAACE,QAAQ,CAACC;EACxB,CAAC,CACH,CAAC;AACL,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAIZ,QAAQ,IAAMC,QAAQ,IAAK;EACnDR,KAAK,CACFS,IAAI,CAAC,kBAAkB,EAAEF,QAAQ,CAAC,CAClCG,IAAI,CAAEC,GAAG,IAAK;IACb;IACA,MAAM;MAAES;IAAM,CAAC,GAAGT,GAAG,CAACO,IAAI;IAC1B;IACAG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,KAAK,CAAC;IACvC;IACAnB,YAAY,CAACmB,KAAK,CAAC;IACnB;IACA,MAAMG,OAAO,GAAGrB,UAAU,CAACkB,KAAK,CAAC;IACjC;IACAZ,QAAQ,CAACgB,cAAc,CAACD,OAAO,CAAC,CAAC;EACnC,CAAC,CAAC,CACDT,KAAK,CAAEC,GAAG,IACTP,QAAQ,CAAC;IACPK,IAAI,EAAEV,UAAU;IAChBa,OAAO,EAAED,GAAG,CAACE,QAAQ,CAACC;EACxB,CAAC,CACH,CAAC;AACL,CAAC;;AAED;AACA,OAAO,MAAMO,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO;IACLZ,IAAI,EAAET;EACR,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMoB,cAAc,GAAID,OAAO,IAAK;EACzC,OAAO;IACLV,IAAI,EAAER,gBAAgB;IACtBW,OAAO,EAAEO;EACX,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMG,QAAQ,GAAIC,UAAU,IAAMnB,QAAQ,IAAK;EACpDR,KAAK,CACFS,IAAI,CAAC,kBAAkB,EAAE;IAAEkB,UAAU,EAAEA;EAAW,CAAC,CAAC,CACpDb,KAAK,CAAEC,GAAG,IAAKa,OAAO,CAACC,GAAG,CAACd,GAAG,CAAC,CAAC;AACrC,CAAC;;AAED;AACA,OAAO,MAAMe,UAAU,GAAGA,CAAA,KAAOtB,QAAQ,IAAK;EAC5C;EACAa,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;EACnC;EACA9B,YAAY,CAAC,KAAK,CAAC;EACnB;EACAO,QAAQ,CAACgB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}